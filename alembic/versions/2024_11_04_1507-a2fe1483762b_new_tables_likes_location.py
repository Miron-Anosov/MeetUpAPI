"""new tables likes, location

Revision ID: a2fe1483762b
Revises: 2434c5f025a7
Create Date: 2024-11-04 15:07:38.040379

"""

from typing import Sequence, Union

import geoalchemy2
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a2fe1483762b"
down_revision: Union[str, None] = "2434c5f025a7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "likes",
        sa.Column(
            "like_id", sa.BigInteger(), autoincrement=True, nullable=False
        ),
        sa.Column("owner_like_id", sa.UUID(), nullable=False),
        sa.Column("target_like_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_like_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_like_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("like_id"),
    )
    op.create_index(
        "unique_like_idx",
        "likes",
        ["owner_like_id", "target_like_id"],
        unique=True,
    )

    op.create_table(
        "locations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "location",
            geoalchemy2.types.Geography(
                geometry_type="POINT",
                srid=4326,
                from_text="ST_GeogFromText",
                name="geography",
            ),
            nullable=True,
        ),
        sa.Column("h3_index_8", sa.BigInteger(), nullable=False),
        sa.Column("h3_index_7", sa.BigInteger(), nullable=False),
        sa.Column("h3_index_6", sa.BigInteger(), nullable=False),
        sa.Column("h3_index_5", sa.BigInteger(), nullable=False),
        sa.Column("h3_index_4", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_location_gist_clients",
        "locations",
        ["location"],
        unique=False,
        postgresql_using="gist",
    )
    op.create_unique_constraint(None, "auth", ["user_id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("user_id", "auth", type_="unique")
    op.drop_table("locations")
    op.drop_index("unique_like_idx", table_name="likes")
    op.drop_table("likes")
    # ### end Alembic commands ###
